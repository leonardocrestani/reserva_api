generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Genre {
  Male
  Female
}

model User {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  first_name   String
  last_name    String
  cpf          String
  genre        Genre
  country      String
  email        String       @unique
  password     String       @unique
  phone_number String
  schedules Schedules[]
  created_at   DateTime     @default(now())
  updated_at   DateTime     @default(now()) @updatedAt
}

enum States {
  AC
  AL
  AP
  AM
  BA
  CE
  DF
  ES
  GO
  MA
  MS
  MT
  MG
  PA
  PB
  PR
  PE
  PI
  RJ
  RN
  RS
  RO
  RR
  SC
  SP
  SE
  TO
}

enum Day {
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
  Sunday
}

type Address {
  city_code     Int
  city_name     String
  state         States
  country       String
  street        String
  neighbourhood String
}

type Contact {
  name         String
  phone_number String
}

type Operation_time {
  open_hour     Int
  open_minutes  Int
  close_hour    Int
  close_minutes Int
  days          String[] \\ VERIFICAR QUANDO COLOCAR DAY COMO RECEBER UMA LISTA DE DAYS
}

model Place {
  id               String         @id @default(auto()) @map("_id") @db.ObjectId
  place_name       String @unique
  number_of_courts Int
  address          Address
  contact          Contact
  operation_time   Operation_time
  courts           Court[]
  created_at       DateTime       @default(now())
  updated_at       DateTime       @default(now()) @updatedAt
}

model Court {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  place      Place       @relation(fields: [place_id], references: [id])
  place_id   String      @db.ObjectId
  schedules  Schedules[]
  created_at DateTime    @default(now())
  updated_at DateTime    @default(now()) @updatedAt
}

model Schedules {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  court         Court      @relation(fields: [court_id], references: [id])
  court_id      String     @db.ObjectId
  hour          Int
  minutes       Int
  is_rent       Boolean    @default(false)
  responsible_person    User        @relation(fields: [responsible_person_id], references: [id])
  responsible_person_id String      @unique @db.ObjectId
  created_at    DateTime   @default(now())
  updated_at    DateTime   @default(now()) @updatedAt
}